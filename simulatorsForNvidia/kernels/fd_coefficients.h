#pragma once
//------------------------------------------------------------------------------
//
// Author: Igor.
//
// Finite difference coefficients.
//
// clang-format off
//------------------------------------------------------------------------------
//
// Staggered grid d/dx stencil coefficients.
//

#include "std_const.h"

template<int ORD, int SET = 0, class T = realtype>
__device__ __host__ __forceinline__
constexpr T stg_d1 (int i)
{
    static_assert(ORD >= 2 && ORD <= 16 && ORD % 2 == 0);
    constexpr int R = ORD / 2;
    constexpr T C[2][36] = {
       {T()              , // 2nd order.
        T( 1.1250000e+0f), // 4th order.
        T(-4.1666667e-2f),
        T( 1.1718750e+0f), // 6th order.
        T(-6.5104167e-2f),
        T( 4.6875000e-3f),
        T( 1.1962891e+0f), // 8th order.
        T(-7.9752604e-2f),
        T( 9.5703125e-3f),
        T(-6.9754464e-4f),
        T()              , // 10th order.
        T()              ,
        T()              ,
        T()              ,
        T()              ,
        T( 1.2403120e+0f), // 12th order.
        T(-1.1141390e-1f),
        T( 2.5759060e-2f),
        T(-6.4207590e-3f),
        T( 1.3095870e-3f),
        T(-1.5512770e-4f),
        T()              , // 14th order.
        T()              ,
        T()              ,
        T()              ,
        T()              ,
        T()              ,
        T()              ,
        T( 1.2542980e+0f), // 16th order.
        T(-1.2349020e-1f),
        T( 3.4703210e-2f),
        T(-1.2018220e-2f),
        T( 4.1883320e-3f),
        T(-1.3102320e-3f),
        T( 3.2333530e-4f),
        T(-4.6750680e-5f)}
       , //--------------------------------------
       {T(1)                      , // 2nd order.
        T(       9) / T(        8), // 4th order.
        T(      -1) / T(       24),
        T(      75) / T(       64), // 6th order.
        T(     -25) / T(      384),
        T(       3) / T(      640),
        T(    1225) / T(     1024), // 8th order.
        T(    -245) / T(     3072),
        T(      49) / T(     5120),
        T(      -5) / T(     7168),
        T(   19845) / T(    16384), // 10th order.
        T(    -735) / T(     8192),
        T(     567) / T(    40960),
        T(    -405) / T(   229376),
        T(      35) / T(   294912),
        T(  160083) / T(   131072), // 12th order.
        T(  -12705) / T(   131072),
        T(   22869) / T(  1310720),
        T(   -5445) / T(  1835008),
        T(     847) / T(  2359296),
        T(     -63) / T(  2883584),
        T( 1288287) / T(  1048576), // 14th order.
        T( -429429) / T(  4194304),
        T(  429429) / T( 20971520),
        T(  -61347) / T( 14680064),
        T(   13013) / T( 18874368),
        T(   -3549) / T( 46137344),
        T(     231) / T( 54525952),
        T(41409225) / T( 33554432), // 16th order.
        T(-3578575) / T( 33554432),
        T( 3864861) / T(167772160),
        T(-1254825) / T(234881024),
        T(  325325) / T(301989888),
        T(  -61425) / T(369098752),
        T(    7425) / T(436207616),
        T(    -143) / T(167772160)}
    };
    return C[SET][(R * R - R) / 2 + i];
}

//
// Regular grid d^2/dx^2 stencil coefficients.
//
template<int ORD, int SET = 0, class T = realtype>
__device__ __host__ __forceinline__
constexpr T reg_d2 (int i)
{
    static_assert(ORD >= 2 && ORD <= 16 && ORD % 2 == 0);
    constexpr int R = ORD / 2;
    constexpr T C[2][44] = {
       {T()              , // 2nd order.
        T()              ,
        T()              , // 4th order.
        T()              ,
        T()              ,
        T()              , // 6th order.
        T()              ,
        T()              ,
        T()              ,
        T(-0.2903117e+1f), // 8th order.
        T( 0.1645351e+1f),
        T(-0.2236606e+0f),
        T( 0.3265851e-1f),
        T(-0.2790073e-2f),
        T()              , // 10th order.
        T()              ,
        T()              ,
        T()              ,
        T()              ,
        T()              ,
        T(-0.3076778e+1f), // 12th order.
        T( 0.1796858e+1f),
        T(-0.3234789e+0f),
        T( 0.8104263e-1f),
        T(-0.1913579e-1f),
        T( 0.3443490e-2f),
        T(-0.3401326e-3f),
        T()              , // 14th order.
        T()              ,
        T()              ,
        T()              ,
        T()              ,
        T()              ,
        T()              ,
        T()              ,
        T(-0.3162230e+1f), // 16th order.
        T( 0.1875943e+1f),
        T(-0.3859840e+0f),
        T( 0.1228261e+0f),
        T(-0.4233006e-1f),
        T( 0.1379639e-1f),
        T(-0.3846673e-2f),
        T( 0.8026637e-3f),
        T(-0.9257725e-4f)}
       , //-----------------------------------
       {T(-2)                  , // 2nd order.
        T( 1)                  ,
        T(      -5) / T(     2), // 4th order.
        T(       4) / T(     3),
        T(      -1) / T(    12),
        T(     -49) / T(    18), // 6th order.
        T(       3) / T(     2),
        T(      -3) / T(    20),
        T(       1) / T(    90),
        T(    -205) / T(    72), // 8th order.
        T(       8) / T(     5),
        T(      -1) / T(     5),
        T(       8) / T(   315),
        T(      -1) / T(   560),
        T(   -5269) / T(  1800), // 10th order.
        T(       5) / T(     3),
        T(      -5) / T(    21),
        T(       5) / T(   126),
        T(      -5) / T(  1008),
        T(       1) / T(  3150),
        T(   -5369) / T(  1800), // 12th order.
        T(      12) / T(     7),
        T(     -15) / T(    56),
        T(      10) / T(   189),
        T(      -1) / T(   112),
        T(       2) / T(  1925),
        T(      -1) / T( 16632),
        T( -266681) / T( 88200), // 14th order.
        T(       7) / T(     4),
        T(      -7) / T(    24),
        T(       7) / T(   108),
        T(      -7) / T(   528),
        T(       7) / T(  3300),
        T(      -7) / T( 30888),
        T(       1) / T( 84084),
        T(-1077749) / T(352800), // 16th order.
        T(      16) / T(     9),
        T(     -14) / T(    45),
        T(     112) / T(  1485),
        T(      -7) / T(   396),
        T(     112) / T( 32175),
        T(      -2) / T(  3861),
        T(      16) / T(315315),
        T(      -1) / T(411840)}
    };
    return C[SET][(R * R + R - 2) / 2 + i];
}
//------------------------------------------------------------------------------

// clang-format on
